// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DoDontList matches snapshot for container 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <DoDontList
    className=""
    style={Object {}}
    title="Do"
    type="tick"
>
    <Do
        className=""
        style={Object {}}
    >
        Test
    </Do>
</DoDontList>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Do
        className=""
        style={Object {}}
>
        Test
</Do>,
      "className": "",
      "style": Object {},
      "title": "Do",
      "type": "tick",
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="nhsuk-do-dont-list "
>
        <h3
                class="nhsuk-do-dont-list__label"
        >
                Do
        </h3>
        <ul
                class="nhsuk-list nhsuk-list--tick"
        >
                <li
                        class=""
                >
                        <svg
                                class="nhsuk-icon nhsuk-icon__tick "
                                xmlns="http://www.w3.org/2000/svg"
                                viewBox="0 0 24 24"
                                aria-hidden="true"
                                fill="none"
                                height="32"
                                width="32"
                        >
                                <path
                                        stroke-width="4"
                                        stroke-linecap="round"
                                        stroke="#007f3b"
                                        d="M18.4 7.8l-8.5 8.4L5.6 12"
                                />
                        </svg>
                        Test
                </li>
        </ul>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3
            className="nhsuk-do-dont-list__label"
>
            Do
</h3>,
          <ul
            className="nhsuk-list nhsuk-list--tick"
>
            <Do
                        className=""
                        style={Object {}}
            >
                        Test
            </Do>
</ul>,
        ],
        "className": "nhsuk-do-dont-list ",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <h3
            class="nhsuk-do-dont-list__label"
>
            Do
</h3>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Do",
            "className": "nhsuk-do-dont-list__label",
          },
          "ref": null,
          "rendered": Array [
            "Do",
          ],
          "type": "h3",
        },
        Object {
          "instance": <ul
            class="nhsuk-list nhsuk-list--tick"
>
            <li
                        class=""
            >
                        <svg
                                    class="nhsuk-icon nhsuk-icon__tick "
                                    xmlns="http://www.w3.org/2000/svg"
                                    viewBox="0 0 24 24"
                                    aria-hidden="true"
                                    fill="none"
                                    height="32"
                                    width="32"
                        >
                                    <path
                                                stroke-width="4"
                                                stroke-linecap="round"
                                                stroke="#007f3b"
                                                d="M18.4 7.8l-8.5 8.4L5.6 12"
                                    />
                        </svg>
                        Test
            </li>
</ul>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Do
              className=""
              style={Object {}}
>
              Test
</Do>,
            "className": "nhsuk-list nhsuk-list--tick",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Test",
                "className": "",
                "style": Object {},
              },
              "ref": null,
              "rendered": Object {
                "instance": <li
                  class=""
>
                  <svg
                                    class="nhsuk-icon nhsuk-icon__tick "
                                    xmlns="http://www.w3.org/2000/svg"
                                    viewBox="0 0 24 24"
                                    aria-hidden="true"
                                    fill="none"
                                    height="32"
                                    width="32"
                  >
                                    <path
                                                      stroke-width="4"
                                                      stroke-linecap="round"
                                                      stroke="#007f3b"
                                                      d="M18.4 7.8l-8.5 8.4L5.6 12"
                                    />
                  </svg>
                  Test
</li>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Unknown
                      className=""
                      height={32}
                      width={32}
/>,
                    "Test",
                  ],
                  "className": "",
                  "style": Object {},
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "",
                      "height": 32,
                      "width": 32,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <svg
                        class="nhsuk-icon nhsuk-icon__tick "
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        aria-hidden="true"
                        fill="none"
                        height="32"
                        width="32"
>
                        <path
                                                stroke-width="4"
                                                stroke-linecap="round"
                                                stroke="#007f3b"
                                                d="M18.4 7.8l-8.5 8.4L5.6 12"
                        />
</svg>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "aria-hidden": "true",
                        "children": <path
                          d="M18.4 7.8l-8.5 8.4L5.6 12"
                          stroke="#007f3b"
                          strokeLinecap="round"
                          strokeWidth="4"
/>,
                        "className": "nhsuk-icon nhsuk-icon__tick ",
                        "fill": "none",
                        "height": 32,
                        "viewBox": "0 0 24 24",
                        "width": 32,
                        "xmlns": "http://www.w3.org/2000/svg",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <path
                            stroke-width="4"
                            stroke-linecap="round"
                            stroke="#007f3b"
                            d="M18.4 7.8l-8.5 8.4L5.6 12"
/>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "d": "M18.4 7.8l-8.5 8.4L5.6 12",
                            "stroke": "#007f3b",
                            "strokeLinecap": "round",
                            "strokeWidth": "4",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "path",
                        },
                      ],
                      "type": "svg",
                    },
                    "type": [Function],
                  },
                  "Test",
                ],
                "type": "li",
              },
              "type": [Function],
            },
          ],
          "type": "ul",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Do
          className=""
          style={Object {}}
>
          Test
</Do>,
        "className": "",
        "style": Object {},
        "title": "Do",
        "type": "tick",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="nhsuk-do-dont-list "
>
          <h3
                    class="nhsuk-do-dont-list__label"
          >
                    Do
          </h3>
          <ul
                    class="nhsuk-list nhsuk-list--tick"
          >
                    <li
                              class=""
                    >
                              <svg
                                        class="nhsuk-icon nhsuk-icon__tick "
                                        xmlns="http://www.w3.org/2000/svg"
                                        viewBox="0 0 24 24"
                                        aria-hidden="true"
                                        fill="none"
                                        height="32"
                                        width="32"
                              >
                                        <path
                                                  stroke-width="4"
                                                  stroke-linecap="round"
                                                  stroke="#007f3b"
                                                  d="M18.4 7.8l-8.5 8.4L5.6 12"
                                        />
                              </svg>
                              Test
                    </li>
          </ul>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="nhsuk-do-dont-list__label"
>
              Do
</h3>,
            <ul
              className="nhsuk-list nhsuk-list--tick"
>
              <Do
                            className=""
                            style={Object {}}
              >
                            Test
              </Do>
</ul>,
          ],
          "className": "nhsuk-do-dont-list ",
          "style": Object {},
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <h3
              class="nhsuk-do-dont-list__label"
>
              Do
</h3>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Do",
              "className": "nhsuk-do-dont-list__label",
            },
            "ref": null,
            "rendered": Array [
              "Do",
            ],
            "type": "h3",
          },
          Object {
            "instance": <ul
              class="nhsuk-list nhsuk-list--tick"
>
              <li
                            class=""
              >
                            <svg
                                          class="nhsuk-icon nhsuk-icon__tick "
                                          xmlns="http://www.w3.org/2000/svg"
                                          viewBox="0 0 24 24"
                                          aria-hidden="true"
                                          fill="none"
                                          height="32"
                                          width="32"
                            >
                                          <path
                                                        stroke-width="4"
                                                        stroke-linecap="round"
                                                        stroke="#007f3b"
                                                        d="M18.4 7.8l-8.5 8.4L5.6 12"
                                          />
                            </svg>
                            Test
              </li>
</ul>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Do
                className=""
                style={Object {}}
>
                Test
</Do>,
              "className": "nhsuk-list nhsuk-list--tick",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Test",
                  "className": "",
                  "style": Object {},
                },
                "ref": null,
                "rendered": Object {
                  "instance": <li
                    class=""
>
                    <svg
                                        class="nhsuk-icon nhsuk-icon__tick "
                                        xmlns="http://www.w3.org/2000/svg"
                                        viewBox="0 0 24 24"
                                        aria-hidden="true"
                                        fill="none"
                                        height="32"
                                        width="32"
                    >
                                        <path
                                                            stroke-width="4"
                                                            stroke-linecap="round"
                                                            stroke="#007f3b"
                                                            d="M18.4 7.8l-8.5 8.4L5.6 12"
                                        />
                    </svg>
                    Test
</li>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Unknown
                        className=""
                        height={32}
                        width={32}
/>,
                      "Test",
                    ],
                    "className": "",
                    "style": Object {},
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "className": "",
                        "height": 32,
                        "width": 32,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <svg
                          class="nhsuk-icon nhsuk-icon__tick "
                          xmlns="http://www.w3.org/2000/svg"
                          viewBox="0 0 24 24"
                          aria-hidden="true"
                          fill="none"
                          height="32"
                          width="32"
>
                          <path
                                                    stroke-width="4"
                                                    stroke-linecap="round"
                                                    stroke="#007f3b"
                                                    d="M18.4 7.8l-8.5 8.4L5.6 12"
                          />
</svg>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "aria-hidden": "true",
                          "children": <path
                            d="M18.4 7.8l-8.5 8.4L5.6 12"
                            stroke="#007f3b"
                            strokeLinecap="round"
                            strokeWidth="4"
/>,
                          "className": "nhsuk-icon nhsuk-icon__tick ",
                          "fill": "none",
                          "height": 32,
                          "viewBox": "0 0 24 24",
                          "width": 32,
                          "xmlns": "http://www.w3.org/2000/svg",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <path
                              stroke-width="4"
                              stroke-linecap="round"
                              stroke="#007f3b"
                              d="M18.4 7.8l-8.5 8.4L5.6 12"
/>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "d": "M18.4 7.8l-8.5 8.4L5.6 12",
                              "stroke": "#007f3b",
                              "strokeLinecap": "round",
                              "strokeWidth": "4",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "path",
                          },
                        ],
                        "type": "svg",
                      },
                      "type": [Function],
                    },
                    "Test",
                  ],
                  "type": "li",
                },
                "type": [Function],
              },
            ],
            "type": "ul",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DoDontList matches snapshot for do 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Do
    className=""
    style={Object {}}
>
    Test
</Do>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Unknown
          className=""
          height={32}
          width={32}
/>,
        "Test",
      ],
      "className": "",
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "",
          "height": 32,
          "width": 32,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "Test",
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Unknown
            className=""
            height={32}
            width={32}
/>,
          "Test",
        ],
        "className": "",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "",
            "height": 32,
            "width": 32,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "Test",
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DoDontList matches snapshot for dont 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dont
    className=""
    style={Object {}}
>
    Test
</Dont>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Unknown
          className=""
          height={32}
          width={32}
/>,
        "Test",
      ],
      "className": "",
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "",
          "height": 32,
          "width": 32,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "Test",
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Unknown
            className=""
            height={32}
            width={32}
/>,
          "Test",
        ],
        "className": "",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "",
            "height": 32,
            "width": 32,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "Test",
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
